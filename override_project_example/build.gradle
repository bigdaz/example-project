buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.2'
    }
}

plugins {
    id 'java'
    id 'project-report'

    id 'nebula.release' version '6.1.0'
    id 'nebula.info' version '3.6.0'
    id 'nebula.java-cross-compile' version '0.10.0'

    // one of maven-publish or ivy-publish, but can use both without issue
    id 'nebula.maven-publish' version '5.1.5'
    id 'nebula.ivy-publish' version '5.1.5'
    id 'nebula.javadoc-jar' version '5.1.5'
    id 'nebula.source-jar' version '5.1.5'

    id 'nebula.override' version '3.0.2'
    id 'nebula.optional-base' version '3.2.0'
    id 'nebula.resolution-rules' version '5.0.2'
    id 'nebula.dependency-lock' version '4.9.5'
}

apply plugin: 'org.junit.platform.gradle.plugin'

// setup your repositories
repositories {
    jcenter()
    maven {
        url '../repository/maven'
    }
}

sourceCompatibility = JavaVersion.VERSION_1_8

// This version constraint would normally be sourced from a shared, published module
dependencies.constraints {
    compile('overridestrategy:transitivedeb') {
        version {
            strictly '1.0.0'
        }
    }
}

// This dependency is declared by the build
dependencies {
    compile 'overridestrategy:a:1.0.0'
}


// This component-metadata-rule override allows this project to comply with constraints
dependencies.components {
    withModule('overridestrategy:a') {
            withDependencies { deps ->
                deps.each { dep ->
                    if (dep.name == 'transitivedeb') {
                        dep.version {
                            prefer '1.0.0'
                        }
                    }
                }
            }
        }
    }
}

/*
// Alternative override using dependency-resolve-rule
configurations.compile.resolutionStrategy.eachDependency { details ->
    if (details.requested.name == 'transitivedeb') {
        details.useVersion('1.0.0')
    }
}
*/
